<Window x:Class="Wireframe_GUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="WIREFRAME" Height="750" Width="1250" Activated="window_Activated">

    <Grid x:Name="mainGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="15*"/>
            <ColumnDefinition Width="25*"/>
            <ColumnDefinition Width="15*"/>
            <ColumnDefinition Width="15*"/>
            <ColumnDefinition Width="15*"/>
            <ColumnDefinition Width="15*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="9*"/>
            <RowDefinition Height="88*"/>
        </Grid.RowDefinitions>
        <Grid.Resources>
            <ControlTemplate x:Key="tabTemplate" TargetType="TabItem">
                <TabItem Background="#4472c4" Foreground="White"/>
            </ControlTemplate>
            <DataTemplate x:Key="screenTemplate" DataType="Image">
                <Button x:Name="screenBtn" Margin="5px,10px" BorderBrush="Transparent" Background="Transparent" Click="screen_Click" Tag="{Binding videoPath}" Cursor="Hand">
                    <Image x:Name="screenImg" Source="{Binding screenPath}"/>
   
                </Button>
            </DataTemplate>
            <!-- Template for a button column. Keep for now in case it is useful later
            <DataTemplate x:Key="ButtonTemplate" DataType="Button">
                <Button x:Name="button" Content="Export" Background="#4472c4" Foreground="White" FontWeight="Bold" FontSize="14px" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{DynamicResource RoundedButtonStyle}"/>
            </DataTemplate>-->
            <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Border" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="1" Padding="20,5" BorderBrush="Black">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="BorderThickness" TargetName="Border" Value="2"/>
                                    <Setter Property="BorderBrush" TargetName="Border" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="textColStyle" TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="FontSize" Value="18"/>
            </Style>
            <Style x:Key="textEditColStyle" TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="Margin" Value="10px"/>
                <Setter Property="Background" Value="White"/>
            </Style>
            <Style x:Key="textEditElementStyle" TargetType="TextBox">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="AcceptsReturn" Value="True"/>
                <Setter Property="BorderThickness" Value="2px"/>
                <Setter Property="BorderBrush" Value="transparent"/>
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="Auto"/>
                <Setter Property="Margin" Value="10px"/>
            </Style>
            <Style x:Key="tabStyle" TargetType="{x:Type TabItem}">
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border x:Name="Border" Padding="10,0,10,0">
                                <ContentPresenter x:Name="ContentSite" ContentSource="Header" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="White"/>
                                    <Setter TargetName="Border" Property="Background" Value="#4472c4"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>

        <DockPanel Grid.ColumnSpan="6" Background="Transparent">
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="File">
                    <MenuItem Header="Set Source Directory" Click="directorySelect_Click"/>
                    <Separator />
                    <MenuItem Header="_Exit" />
                </MenuItem>
            </Menu>
        </DockPanel>
        <ComboBox x:Name="prefixCombo" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" SelectionChanged="prefixCombo_SelectionChanged" Text="Select" IsEditable="True" IsReadOnly="True" Focusable="False" Margin="25,5,5,5" MinWidth="100"/>
        <Button x:Name="playVideoBtn" Grid.Row="1" Grid.Column="3" Content="Play Full Video" Style="{DynamicResource RoundedButtonStyle}" Background="#d9d9d9" Margin="15px,15px" Click="playfullBtn_Click"/>
        <StackPanel Grid.Column="4" Grid.Row="1">
            <Button x:Name="showGraphBtn" Grid.Row="1" Grid.Column="3" Content="Show Video Graphs" Style="{DynamicResource RoundedButtonStyle}" Background="#d9d9d9" Click="showGraphBtn_Click" Margin="5,2"/>
            <Button x:Name="showCompGraphBtn" Grid.Row="1" Grid.Column="4" Content="Show Compare Graphs" Style="{DynamicResource RoundedButtonStyle}" Background="#d9d9d9" Click="showCompGraphBtn_Click"  Margin="5,2"/>
        </StackPanel>
        <StackPanel Grid.Column="5" Grid.Row="1">
            <Button x:Name="saveBtn" Grid.Row="1" Grid.Column="5" Content="Save Notes and Comments" Style="{DynamicResource RoundedButtonStyle}" Background="#d9d9d9" Margin="5,2" Click="saveBtn_Click"/>
            <Button x:Name="exportBtn" Grid.Row="1" Grid.Column="5" Content="Export Video Clips" Style="{DynamicResource RoundedButtonStyle}" Background="#d9d9d9" Margin="5,2" Click="exportBtn_Click"/>
        </StackPanel>

        <DockPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="6" Margin="10">
            <TabControl x:Name="tabCtrl" DockPanel.Dock="Top" Margin="1,1,1,-8" SelectionChanged="tab_SelectionChanged"/>
            <DataGrid x:Name="dataTable" AutoGenerateColumns="False" AlternatingRowBackground="#e9ebf5" CanUserResizeColumns="True" RowBackground="#cfd5ea" GridLinesVisibility="None" BorderBrush="Transparent" CanUserAddRows="False">
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="BorderBrush" Value="White"/>
                        <Setter Property="BorderThickness" Value="1px"/>

                        <!--Disable the appearance of rows being selected-->
                        <Style.Triggers>
                            <Trigger Property="DataGridCell.IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="White"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                <Setter Property="Background" Value="Transparent"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="#4472c4"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontSize" Value="20px"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn x:Name="timeCol" Width="3*" Header="Video Time (Sec)" Binding="{Binding Path=timeRange}" IsReadOnly="True" ElementStyle="{StaticResource textColStyle}"/>
                    <DataGridTextColumn x:Name="audioLblCol" Width="2*" Header="Audio Label"  Binding="{Binding Path=audioLabel}" IsReadOnly="True" ElementStyle="{StaticResource textColStyle}"/>
                    <DataGridTextColumn x:Name="attnLblCol" Width="2*" Header="Attn Label"  Binding="{Binding Path=attnLabel}" IsReadOnly="True" ElementStyle="{StaticResource textColStyle}"/>
                    <DataGridTemplateColumn x:Name="screenCol" Width="4*" Header="Video Clip" CellTemplate="{StaticResource screenTemplate}"/>
                    <DataGridTextColumn x:Name="commentCol" Width="5*" Header="Comments" IsReadOnly="False" ElementStyle="{StaticResource textEditColStyle}" EditingElementStyle="{StaticResource textEditElementStyle}" Binding="{Binding Path=comment, Mode=TwoWay}"/>
                    <DataGridTextColumn x:Name="notesCol" Width="5*" Header="Notes" IsReadOnly="False" ElementStyle="{StaticResource textEditColStyle}" EditingElementStyle="{StaticResource textEditElementStyle}" Binding="{Binding Path=note, Mode=TwoWay}"/>
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>
    </Grid>
</Window>
